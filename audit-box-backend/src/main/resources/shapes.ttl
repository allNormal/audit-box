@prefix rr:     <http://www.w3.org/ns/r2rml#> .
@prefix rml:    <http://semweb.mmlab.be/ns/rml#> .
@prefix ql:     <http://semweb.mmlab.be/ns/ql#> .
@prefix carml:  <http://carml.taxonic.com/carml/> .
@prefix xsd:    <http://www.w3.org/2001/XMLSchema#> .
@prefix dcterm: <http://purl.org/dc/terms/> .
@prefix owl:    <http://www.w3.org/2002/07/owl#> .
@prefix rdfs:   <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rdf:    <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix ex: <http://www.semanticweb.org/43676/ontologies/2021/2/Vasqua-Shacl#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix prov:   <http://www.w3.org/ns/prov#> .
@prefix : <http://www.semanticweb.org/43676/ontologies/2021/3/vasqua_auditbox#> .
@prefix p-plan: <http://purl.org/net/p-plan#> .
@prefix ep-plan: <https://w3id.org/ep-plan#> .
ex:JupyterNotebook a sh:NodeShape ;
                        sh:targetClass :JupyterNotebookProvenance ;
                        sh:property [
                                    sh:path ep-plan:correspondsToVariable ;
                                    sh:class :JupyterNotebook ;
                        ] ;
.

ex:DockerContainer a sh:NodeShape ;
                   sh:targetClass :DockerContainerProvenance ;
                   sh:property [
                                   sh:path ep-plan:correspondsToVariable ;
                                   sh:class :DockerContainer ;
                               ] ;
.
ex:DockerImage a sh:NodeShape ;
                   sh:targetClass :DockerImageProvenance ;
                   sh:property [
                                   sh:path ep-plan:correspondsToVariable ;
                                   sh:class :DockerImage ;
                               ] ;
.
ex:AirportRAW a sh:NodeShape ;
                   sh:targetClass :AirportRAWProvenance ;
                   sh:property [
                                   sh:path ep-plan:correspondsToVariable ;
                                   sh:class :AirportRAW ;
                               ] ;
.
ex:AirportJSON a sh:NodeShape ;
                   sh:targetClass :AirportJSONProvenance ;
                   sh:property [
                                   sh:path ep-plan:correspondsToVariable ;
                                   sh:class :AirportJSON ;
                               ] ;
.
ex:ValidatingData a sh:NodeShape ;
                        sh:targetClass :ExecutionTraceBundle ;
                        sh:and(
                                [
                                        sh:path ep-plan:hasTraceElement ;
                                        sh:node :TransformToJSON;
                                        sh:minCount 1;
                                        sh:maxCount 1;
                                ]
                                [
                                        sh:path ep-plan:hasTraceElement ;
                                        sh:node :Run;
                                        sh:minCount 1;
                                        sh:maxCount 1;
                                ]
                                [
                                    sh:path ep-plan:hasTraceElement ;
                                    sh:node ex:JupyterNotebook;
                                    sh:minCount 1;
                                    sh:maxCount 1;
                                ]
                                [
                                    sh:path ep-plan:hasTraceElement ;
                                    sh:node ex:DockerContainer;
                                    sh:minCount 1;
                                    sh:maxCount 1;
                                ]
                                [
                                    sh:path ep-plan:hasTraceElement ;
                                    sh:node ex:DockerImage;
                                    sh:minCount 1;
                                    sh:maxCount 1;
                                ]
                                [
                                    sh:path ep-plan:hasTraceElement ;
                                    sh:node ex:AirportJSON;
                                    sh:minCount 1;
                                    sh:maxCount 1;
                                ]
                                [
                                    sh:path ep-plan:hasTraceElement ;
                                    sh:node ex:AirportRAW;
                                    sh:minCount 1;
                                    sh:maxCount 1;
                                ]
                                [
                                    sh:path ep-plan:hasTraceElement ;
                                    sh:node :GetWebsiteRAW;
                                    sh:minCount 1;
                                    sh:maxCount 1;
                                ]
                              )
.

